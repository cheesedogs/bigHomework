<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.cinema.data.sales.TicketMapper">
    <insert id="insertTicket" parameterType="com.example.cinema.po.Ticket"
            useGeneratedKeys="true" keyProperty="id">
        insert into ticket(user_id,schedule_id,column_index,row_index,state)
        values(#{userId}, #{scheduleId},#{columnIndex},#{rowIndex},#{state})
    </insert>
    <insert id="insertTickets" parameterType="java.util.List"
            useGeneratedKeys="true" keyProperty="id">
        insert into ticket(user_id,schedule_id,column_index,row_index,state)
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.userId}, #{item.scheduleId},#{item.columnIndex},#{item.rowIndex},#{item.state})
        </foreach>

    </insert>

    <select id="selectTicketById" resultMap="Ticket">
        select * from ticket where id=#{id}
    </select>

    <select id="selectTicketsBySchedule" resultMap="Ticket">
        select * from ticket where schedule_id=#{scheduleId} and state!=2
    </select>

    <select id="selectTicketByScheduleIdAndSeat" resultMap="Ticket">
        select * from ticket where schedule_id=#{scheduleId} and column_index=#{column} and row_index=#{row} and state!=2
    </select>

    <select id="selectTicketByUser" resultMap="Ticket">
        select * from ticket where user_id=#{userId}
    </select>

    <update id="updateTicketState">
        update ticket set state = #{state} where id=#{ticketId}
    </update>

    <delete id="deleteTicket">
        delete from ticket where id=#{ticketId}
    </delete>

    <update id="cleanExpiredTicket">
        update ticket SET  state =2 WHERE minute(timediff(now(),time))>15 and state=0;
    </update>

    <select id="selectTicketByDate" resultMap="Ticket">
        select * from ticket where time > #{startDate} and #{endDate}>time
    </select>

    <select id="selectRefundStrategy" resultMap="RefundStrategy">
        select * from refund_strategy order by hours_before_end;
    </select>

    <insert id="insertRefundStrategy" parameterType="com.example.cinema.po.RefundStrategy" useGeneratedKeys="true" keyProperty="id">
        insert into refund_strategy(hours_before_end, rate) values (#{hoursBeforeEnd},#{rate})
    </insert>

    <update id="updateRefundStrategy" parameterType="com.example.cinema.po.RefundStrategy">
        update refund_strategy set hours_before_end=#{hoursBeforeEnd},rate=#{rate} where id=#{id}
    </update>

    <select id="selectScheduleByTicketId" resultMap="ScheduleItem">
        select * from schedule s where s.id = (select t.schedule_id from ticket t where t.id=#{id});
    </select>

    <update id="completeTicket">
        update ticket set state=1, pay_amount=#{payAmount} where id = #{id}
    </update>

    <select id="selectTicketWithScheduleByUser" resultMap="TicketWithSchedule">
        select t.id as id, t.user_id as user_id, t.column_index, t.row_index,
               t.state, t.time, s.id as schedule_id,
               h.id as hall_id, h.name as hall_name,
               m.id as movie_id, m.name as movie_name,
               s.start_time, s.end_time, s.fare
        from ticket t
            left join schedule s on t.schedule_id=s.id
            left join movie m on s.movie_id=m.id
            left join hall h on s.hall_id=h.id
        where t.user_id=#{id} and t.state in (1,3);
    </select>

    <resultMap id="Ticket" type="com.example.cinema.po.Ticket">
        <result column="schedule_id" property="scheduleId"/>
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="column_index" property="columnIndex"/>
        <result column="row_index" property="rowIndex"/>
        <result column="state" property="state"/>
        <result column="time" property="time"/>
        <result column="pay_amount" property="payAmount"/>
    </resultMap>

    <resultMap id="RefundStrategy" type="com.example.cinema.po.RefundStrategy">
        <id column="id" property="id"/>
        <result column="hours_before_end" property="hoursBeforeEnd"/>
        <result column="rate" property="rate"/>
    </resultMap>

    <resultMap id="ScheduleItem" type="com.example.cinema.po.ScheduleItem">
        <id column="id" property="id"/>
        <result column="hall_id" property="hallId"/>
        <result column="movie_id" property="movieId"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="movie_name" property="movieName"/>
        <result column="hall_name" property="hallName"/>
        <result column="fare" property="fare"/>
    </resultMap>

    <resultMap id="TicketWithSchedule" type="com.example.cinema.vo.TicketWithScheduleVO">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="column_index" property="columnIndex"/>
        <result column="row_index" property="rowIndex"/>
        <result column="state" property="state"/>
        <result column="time" property="time"/>
        <association property="schedule" resultMap="ScheduleItem">
        </association>
    </resultMap>
</mapper>